Communications Game 07/06/2011 Concept by Tangible Dream

A play off of Khan Academy gaming system for training communication skills to players.

It'll require a persistent backend for player scores and stats, as well as the warehousing of questions.
Let's talk about how we'd like to build this out.  Languages? Gui vs. Browser App, etc.

7/07/2011 5:26PM

I thought about this a little bit.

Class concept

1. A base concept gives you proficiency if you answer 10 questions in a row correctly. (
2. A advanced concept gives you proficiency if you answer 10 questions in a row correctly 
	and have proficiency in all dependent concepts both base and advanced.
3. An advanced concept unlocks only when proficiency is achieved in all dependent concepts
4. A challenge concept promotes integration of several concepts.
5. A challenge concept unlocks when proficiency is achieved in all dependent concepts.
6. A challenge concept is won after 50 questions are answered correctly*

Class question

1. A question tests proficiency for a given concept.
2. A question can be formed in any the following ways...
	a. fill in the blank.
	b. true or false.
	c. multiple choice.
	d. matched pairs
	e. other?
3. Questions can have score hurting hints.
4. Questions can come in written, picture, sound, or video form.

Front language

If we are going to take advantage of relevant video links the way Khan Academy does, 
I suggest we make it a browser app and employ Ruby/ ROR.

Back language (updated 7/12/11)

I was talking about having mongoDB at first, because it is new and would be fun to learn.  And while both of these statements are true, talking to Terry, I suggest we stick with MySql. The thing is, Mongo doesn't necessarily mean a performance bump.  It is best when the data is written one and forever after read.  While the questions and concepts may fall neatly into this category. The player data will be a constant read/write process.  I wouldn't mind exploring the idea of having rails run two seperate databases (and two seperate types of database for that matter) but for now, let's stick with MySql.
Sources

http://www.khanacademy.org
http://www.ted.com/talks/lang/eng/tom_chatfield_7_ways_games_reward_the_brain.html
http://www.youtube.com/watch?v=7T7-o2PLcpo (Mongo on Rails in 4 steps! Sweet)
